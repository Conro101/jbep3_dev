// ********************************
// ** auto generated pixelshader **
// ********************************

#define SHADER_EDITOR_2013_COMPILE

// Combos
// STATIC: "FLASHLIGHT"		"0..0"
// DYNAMIC: "NUM_LIGHTS"		"0..4"
// DYNAMIC: "PIXELFOGTYPE"		"0..1"
// DYNAMIC: "WRITEWATERFOGTODESTALPHA"		"0..1"

// Includes
#include "common_ps_fxc.h"
#include "common_vertexlitgeneric_dx9.h"
#include "common_lightmappedgeneric_fxc.h"
#include "common_flashlight_fxc.h"
#include "common_parallax.h"


// Samplers
sampler _Sampler_00		: register( s0 );
sampler _Sampler_01		: register( s1 );

// Constants
const float4x3 g_cCMatrix_View		: register( c16 );
const float4 _g_FogParams		: register( c19 );
const float3 _g_VecOrig		: register( c20 );
const float3 g_cAmbientCube[6]		: register( c0 );
PixelShaderLightInfo g_cLightInfo[3]		: register( c6 );

// Semantic structures
struct PS_INPUT
{
	float2 vTexCoord_0			:	TEXCOORD0;
	float3 vTexCoord_1			:	TEXCOORD1;
	float3 vTexCoord_2			:	TEXCOORD2;
	float4 vTexCoord_3			:	TEXCOORD3;
	float4 vColor_0				:	COLOR0;
};

struct PS_OUTPUT
{
	float4 vColor_0				:	COLOR0;
};

// Entry point
PS_OUTPUT main( const PS_INPUT In )
{
	PS_OUTPUT Out;
	float3 _var0 = tex2D( _Sampler_00, In.vTexCoord_0 ).rgb;
	float3 _var1 = float3( 0.000000, 0.000000, 0.000000 );
	float3 _var2 = mul( float4(In.vTexCoord_2.xyz,1), (float3x3)g_cCMatrix_View );
	float _var3 = _g_VecOrig.z;
	float _var4 = In.vTexCoord_1.z;
	float _var5 = In.vTexCoord_3.z;
#if ( FLASHLIGHT == 0 )
		float3 _var6 = PixelShaderDoLighting( In.vTexCoord_1, In.vTexCoord_2, float3(0,0,0),
				false, true, In.vColor_0,
				g_cAmbientCube, NUM_LIGHTS, g_cLightInfo,
				false, false, 1.0f );
		_var1 = _var6;
#endif
	float2 _var7 = _var2.xy;
	_var3 = CalcPixelFogFactor( PIXELFOGTYPE, _g_FogParams, _var3, _var4, _var5 );
	_var7 = _var7 * float2( 1.000000, -1.000000 );
	_var7 = _var7 * float( 0.500000 );
	_var7 = _var7 + float( 0.500000 );
	float3 _var8 = tex2D( _Sampler_01, _var7 ).rgb;
	_var1 = _var1 + _var8;
	_var0 = _var0 * _var1;
	float4 _var9 = float4( _var0, float( 0.500000 ) );
	_var9 = FinalOutput( _var9, _var3, PIXELFOGTYPE, TONEMAP_SCALE_LINEAR, true, _var5 );
	Out.vColor_0 = _var9;
	return Out;
}